---
apiVersion: v1
kind: Service
metadata:
  name: public-api
  labels:
    app: public-api
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: public-api

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: public-api
automountServiceAccountToken: true

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: pub-api-init
data:
  config: |
    cat <<EOF > /app/service.json
    {
      "Name": "pub-api",
      "Tags": ["application","production"],
      "Address": "${POD_IP}",
      "Port": 8080,
      "Check": {
        "Method": "GET",
        "HTTP": "http://${POD_IP}:8080",
        "Interval": "1s"
      }
    }
    EOF

---

# Public API - GraphQL

apiVersion: apps/v1
kind: Deployment
metadata:
  name: public-api
spec:
  replicas: 1
  selector:
    matchLabels:
      service: public-api
      app: public-api
  template:
    metadata:
      labels:
        service: public-api
        app: public-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9102"
    spec:
      serviceAccountName: public-api
      volumes:
      - name: consul-init
        configMap:
          name: pub-api-init
          items:
          - key: config
            path: service.sh
      containers:
        - name: public-api
          image: hashicorpdemoapp/public-api:v0.0.1
          ports:
            - containerPort: 8080
          env:
            - name: BIND_ADDRESS
              value: ":8080"
            - name: PRODUCTS_API_URI
              value: "http://product-api.service.consul:9090"
      initContainers:
        - name: consul-init
          image: ppresto/consul-init:0.2.9
          volumeMounts:
            - name: consul-init
              mountPath: /consul
              readOnly: false
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
      