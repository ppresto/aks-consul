---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres
automountServiceAccountToken: true

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
data:
  config: |
    cat <<EOF > /app/service.json
    {
      "Name": "postgres",
      "Tags": ["application","production"],
      "Address": "${POD_IP}",
      "Port": 5432,
      "Check": {
        "TCP": "${POD_IP}:5432",
        "Interval": "2s",
        "Timeout": "10s"
      }
    }
    EOF

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      service: postgres
      app: postgres
  template:
    metadata:
      labels:
        service: postgres
        app: postgres
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9102"
    spec:
      serviceAccountName: postgres
      containers:
        - name: postgres
          image: hashicorpdemoapp/product-api-db:v0.0.11
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: products
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: password
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: "pgdata"
      initContainers:
        - name: consul-init
          image: ppresto/consul-init:0.2.9
          volumeMounts:
            - name: consul-init
              mountPath: /consul
              readOnly: false
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP

      volumes:
        - name: pgdata
          emptyDir: {}
        - name: consul-init
        configMap:
          name: frontend-init
          items:
          - key: config
            path: service.sh
